import asyncio
import logging
import os
import sys
from typing import Dict, Optional
import time

from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.exceptions import TelegramBadRequest
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application
from aiohttp import web

from config import BOT_TOKEN, WEBHOOK_PATH, WEBHOOK_URL, WEB_SERVER_HOST, WEB_SERVER_PORT
from game import Game, active_games
from keyboards import get_join_keyboard, get_game_actions_keyboard

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–æ–≤ –æ–∂–∏–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
join_timers: Dict[int, float] = {}

# –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
JOIN_TIMEOUT = 60.0

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞
last_keyboard_messages: Dict[int, int] = {}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.errors()
async def errors_handler(exception: Exception):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫."""
    logging.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {exception}")

@dp.message(Command("start", ignore_mention=True))
async def cmd_start(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await message.answer(
        "üé¥ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É \"21\"!*\n\n"
        "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start_21.\n"
        "–ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /game_status.\n"
        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª –∏–≥—Ä—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help.\n\n"
        "‚úÖ –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞ –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã.",
        parse_mode="Markdown"
    )

@dp.message(Command("start_21", ignore_mention=True))
async def cmd_start_game(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start_21 - –Ω–∞—á–∞–ª–æ –Ω–æ–≤–æ–π –∏–≥—Ä—ã"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ
    if message.chat.type not in ["group", "supergroup"]:
        await message.answer("‚ö†Ô∏è –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö!")
        return

    chat_id = message.chat.id
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∏–≥—Ä—É –≤ —á–∞—Ç–µ
    if chat_id in active_games:
        game = active_games[chat_id]
        if not game.finished:
            await message.answer("‚ö†Ô∏è –í —ç—Ç–æ–º —á–∞—Ç–µ —É–∂–µ –∏–¥–µ—Ç –∏–≥—Ä–∞!")
            return
        else:
            # –£–¥–∞–ª—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—É—é –∏–≥—Ä—É
            del active_games[chat_id]
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É
    active_games[chat_id] = Game(chat_id)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –æ–∂–∏–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
    join_timers[chat_id] = time.time()
    
    bot_username = (await bot.get_me()).username
    
    await message.answer(
        f"üéÆ *–ù–∞—á–∞—Ç–∞ –Ω–æ–≤–∞—è –∏–≥—Ä–∞ –≤ 21!*\n"
        f"üë• *–ò–≥—Ä–æ–∫–∏:* 0/2\n"
        f"‚è≥ *–û–∂–∏–¥–∞–µ–º –∏–≥—Ä–æ–∫–æ–≤...*\n\n"
        f"–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è.\n\n"
        f"‚ùóÔ∏è *–í–∞–∂–Ω–æ:* –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∏–≥—Ä—ã –∫–∞–∂–¥—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∞—Ç—å –ª–∏—á–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º: "
        f"https://t.me/{bot_username}",
        parse_mode="Markdown",
        reply_markup=get_join_keyboard()
    )
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –æ–∂–∏–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
    asyncio.create_task(wait_for_second_player(chat_id, message.message_id))

@dp.message(Command("game_status", ignore_mention=True))
async def cmd_game_status(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /game_status - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã"""
    chat_id = message.chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ
    if message.chat.type not in ["group", "supergroup"]:
        await message.answer("‚ö†Ô∏è –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã
    if chat_id not in active_games:
        try:
            await message.answer(
                "‚ÑπÔ∏è –í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã. –ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—É—é –∏–≥—Ä—É –∫–æ–º–∞–Ω–¥–æ–π /start\_21",
                parse_mode="Markdown"
            )
        except TelegramBadRequest as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await message.answer("‚ÑπÔ∏è –í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã. –ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—É—é –∏–≥—Ä—É –∫–æ–º–∞–Ω–¥–æ–π /start_21")
        return
    
    game = active_games[chat_id]
    
    # –ï—Å–ª–∏ –∏–≥—Ä–∞ –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å (–æ–∂–∏–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤)
    if not game.started:
        players_count = len(game.players)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–≤—à–∏—Ö—Å—è –∏–≥—Ä–æ–∫–æ–≤
        players_info = ""
        if players_count > 0:
            players_list = "\n".join([f"üë§ `{player.username}`" for player in game.players.values()])
            players_info = f"üë• *–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–≤—à–∏–µ—Å—è –∏–≥—Ä–æ–∫–∏ ({players_count}/2):*\n{players_list}\n"
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è
        time_info = ""
        if chat_id in join_timers:
            elapsed = time.time() - join_timers[chat_id]
            remaining = max(0, JOIN_TIMEOUT - elapsed)
            time_info = f"‚è± *–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏:* {int(remaining)} —Å–µ–∫.\n"
        
        status_message = (
            f"üìä *–°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã:* –û–∂–∏–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤\n"
            f"{players_info}"
            f"{time_info}\n"
            f"‚ö†Ô∏è –î–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –º–∏–Ω–∏–º—É–º 2 –∏–≥—Ä–æ–∫–∞.\n"
            f"üéÆ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è:"
        )
        
        try:
            await message.answer(status_message, parse_mode="Markdown", reply_markup=get_join_keyboard())
        except TelegramBadRequest as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            clean_message = status_message.replace("*", "").replace("`", "").replace("\\_", "_")
            await message.answer(clean_message, reply_markup=get_join_keyboard())
    else:
        # –ï—Å–ª–∏ –∏–≥—Ä–∞ —É–∂–µ –∏–¥–µ—Ç
        if game.finished:
            # –ï—Å–ª–∏ –∏–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
            try:
                await message.answer(
                    f"üìä *–°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã:* –ó–∞–≤–µ—Ä—à–µ–Ω–∞\n\n{game.get_status_message()}",
                    parse_mode="Markdown"
                )
            except TelegramBadRequest as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                status_message = f"üìä –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã: –ó–∞–≤–µ—Ä—à–µ–Ω–∞\n\n{game.get_status_message().replace('*', '')}"
                await message.answer(status_message)
        else:
            # –ï—Å–ª–∏ –∏–≥—Ä–∞ –∞–∫—Ç–∏–≤–Ω–∞
            current_player = game.players.get(game.current_player_id)
            player_name = current_player.username if current_player else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ —Å –∏—Ö —Å—Ç–∞—Ç—É—Å–∞–º–∏
            players_info = []
            for player in game.players.values():
                status = "üéÆ"
                if player.user_id == game.current_player_id:
                    status = "üéØ"  # —Ç–µ–∫—É—â–∏–π —Ö–æ–¥
                elif player.busted:
                    status = "üí•"  # –ø–µ—Ä–µ–±–æ—Ä
                elif player.stopped:
                    status = "‚úã"  # –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è
                
                players_info.append(f"{status} `{player.username}`: {player.get_score()} –æ—á–∫–æ–≤")
            
            players_list = "\n".join(players_info)
            
            status_message = (
                f"üìä *–°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã:* –ê–∫—Ç–∏–≤–Ω–∞\n"
                f"üë• *–ò–≥—Ä–æ–∫–∏:*\n{players_list}\n\n"
                f"üéØ *–¢–µ–∫—É—â–∏–π —Ö–æ–¥:* `{player_name}`"
            )
            
            try:
                await message.answer(status_message, parse_mode="Markdown")
            except TelegramBadRequest as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                clean_message = status_message.replace("*", "").replace("`", "").replace("\\_", "_")
                await message.answer(clean_message)

@dp.message(Command("help", ignore_mention=True))
async def cmd_help(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"""
    help_text = (
        "üéÆ *–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã \"21\"*\n\n"
        "–¶–µ–ª—å –∏–≥—Ä—ã: –Ω–∞–±—Ä–∞—Ç—å 21 –æ—á–∫–æ –∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±–ª–∏–∑–∫–æ–µ –∫ 21, –Ω–æ –Ω–µ –±–æ–ª—å—à–µ.\n\n"
        "*–¶–µ–Ω–Ω–æ—Å—Ç—å –∫–∞—Ä—Ç:*\n"
        "‚Ä¢ –ö–∞—Ä—Ç—ã –æ—Ç 2 –¥–æ 10 - –ø–æ –Ω–æ–º–∏–Ω–∞–ª—É\n"
        "‚Ä¢ –í–∞–ª–µ—Ç (J), –î–∞–º–∞ (Q), –ö–æ—Ä–æ–ª—å (K) - 10 –æ—á–∫–æ–≤\n"
        "‚Ä¢ –¢—É–∑ (A) - 11 –æ—á–∫–æ–≤ –∏–ª–∏ 1 –æ—á–∫–æ (–µ—Å–ª–∏ 11 –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ –ø–µ—Ä–µ–±–æ—Ä—É)\n\n"
        "*–•–æ–¥ –∏–≥—Ä—ã:*\n"
        "1. –í –∏–≥—Ä–µ —É—á–∞—Å—Ç–≤—É—é—Ç 2 –∏–≥—Ä–æ–∫–∞\n"
        "2. –ö–∞–∂–¥—ã–π –∏–≥—Ä–æ–∫ –ø–æ–ª—É—á–∞–µ—Ç –ø–æ 2 –∫–∞—Ä—Ç—ã\n"
        "3. –ò–≥—Ä–æ–∫–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –º–æ–≥—É—Ç –≤–∑—è—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è\n"
        "4. –ï—Å–ª–∏ —Å—É–º–º–∞ –∫–∞—Ä—Ç –∏–≥—Ä–æ–∫–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 21, –æ–Ω –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç (–ø–µ—Ä–µ–±–æ—Ä)\n"
        "5. –ö–æ–≥–¥–∞ –æ–±–∞ –∏–≥—Ä–æ–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏ –±—Ä–∞—Ç—å –∫–∞—Ä—Ç—ã, —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç—Å—è —Å—É–º–º–∞ –æ—á–∫–æ–≤\n"
        "6. –ü–æ–±–µ–∂–¥–∞–µ—Ç –∏–≥—Ä–æ–∫ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ—á–∫–æ–≤ (–Ω–µ –±–æ–ª–µ–µ 21)\n\n"
        "*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
        "‚Ä¢ /start\_21 - –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É (—Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ)\n"
        "‚Ä¢ /game\_status - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã\n"
        "‚Ä¢ /help - –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã\n\n"
        "‚ùóÔ∏è *–í–∞–∂–Ω–æ:* –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∏–≥—Ä—ã –∫–∞–∂–¥—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∞—Ç—å –ª–∏—á–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–∏—Ö –∫–∞—Ä—Ç–∞—Ö."
    )
    try:
        await message.answer(help_text, parse_mode="Markdown")
    except TelegramBadRequest as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        clean_text = help_text.replace("*", "").replace("`", "").replace("\\_", "_")
        await message.answer(clean_text)

async def wait_for_second_player(chat_id: int, message_id: int):
    """–§—É–Ω–∫—Ü–∏—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞ —Å —Ç–∞–π–º–µ—Ä–æ–º"""
    await asyncio.sleep(JOIN_TIMEOUT)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–≥—Ä–∞ –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ –Ω–∞—á–∞—Ç–∞
    if chat_id in active_games and not active_games[chat_id].started:
        game = active_games[chat_id]
        
        # –ï—Å–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∏–≥—Ä–æ–∫, –æ—Ç–º–µ–Ω—è–µ–º –∏–≥—Ä—É
        if len(game.players) < 2:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–≤—à–∏—Ö—Å—è –∏–≥—Ä–æ–∫–æ–≤
            players_count = len(game.players)
            players_info = ""
            if players_count > 0:
                # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Markdown –≤ –∏–º–µ–Ω–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                players_list = "\n".join([f"üë§ `{player.username}`" for player in game.players.values()])
                players_info = f"\n\nüë• *–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–≤—à–∏–µ—Å—è –∏–≥—Ä–æ–∫–∏ ({players_count}/2):*\n{players_list}"
            
            timeout_message = (
                f"‚è± *–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ!*\n"
                f"–î–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –º–∏–Ω–∏–º—É–º 2 –∏–≥—Ä–æ–∫–∞.{players_info}\n\n"
                f"–ò–≥—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—É—é –∏–≥—Ä—É –∫–æ–º–∞–Ω–¥–æ–π /start\\_21"
            )
            
            try:
                await bot.send_message(chat_id, timeout_message, parse_mode="Markdown")
            except TelegramBadRequest as e:
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å Markdown, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                clean_message = timeout_message.replace("*", "").replace("`", "").replace("\\_", "_")
                await bot.send_message(chat_id, clean_message)
            
            del active_games[chat_id]
            
            # –£–¥–∞–ª—è–µ–º —Ç–∞–π–º–µ—Ä
            if chat_id in join_timers:
                del join_timers[chat_id]

@dp.callback_query(F.data == "join_game")
async def process_join_callback(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –∏–≥—Ä–µ"""
    chat_id = callback.message.chat.id
    user_id = callback.from_user.id
    username = callback.from_user.first_name
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏–≥—Ä—ã
    if chat_id not in active_games:
        await callback.answer("‚ö†Ô∏è –ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.", show_alert=True)
        return
    
    game = active_games[chat_id]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—á–∞—Ç–∞ –ª–∏ —É–∂–µ –∏–≥—Ä–∞
    if game.started:
        await callback.answer("‚ö†Ô∏è –ò–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å!", show_alert=True)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–Ω–µ–µ
    if user_id in game.players:
        await callback.answer("‚ÑπÔ∏è –í—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!", show_alert=True)
        return
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞
    can_start = game.add_player(user_id, username)
    
    await callback.answer(f"‚úÖ –í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!", show_alert=False)
    
    bot_username = (await bot.get_me()).username
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–≤—à–∏—Ö—Å—è –∏–≥—Ä–æ–∫–æ–≤
    players_list = "\n".join([f"üë§ `{player.username}`" for player in game.players.values()])
    players_count = len(game.players)
    
    join_message = (
        f"üë§ –ò–≥—Ä–æ–∫ `{username}` –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ!\n\n"
        f"üìä *–°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã:*\n"
        f"üë• *–ò–≥—Ä–æ–∫–∏ ({players_count}/2):*\n{players_list}\n"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∏–≥—Ä–æ–∫–∞—Ö –∏ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è
    if players_count < 2:
        join_message += f"‚è≥ *–û–∂–∏–¥–∞–µ–º –µ—â–µ {2 - players_count} –∏–≥—Ä–æ–∫–∞...*\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è
        if chat_id in join_timers:
            elapsed = time.time() - join_timers[chat_id]
            remaining = max(0, JOIN_TIMEOUT - elapsed)
            join_message += f"‚è± *–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏:* {int(remaining)} —Å–µ–∫.\n"
    
    # –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –º–æ–∂–µ—Ç –ª–∏ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try:
        await bot.send_chat_action(user_id, "typing")
        # –ï—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, —Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞–ª —Å –±–æ—Ç–æ–º
    except Exception:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º
        join_message += f"\n‚ùóÔ∏è `{username}`, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –ª–∏—á–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∏–≥—Ä—ã: https://t.me/{bot_username}"
    
    # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–º–µ–Ω–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
    try:
        await callback.message.edit_text(
            join_message,
            parse_mode="Markdown",
            reply_markup=get_join_keyboard() if players_count < 2 else None
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        try:
            await bot.send_message(chat_id, join_message, parse_mode="Markdown")
        except TelegramBadRequest as e:
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å Markdown, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            clean_message = join_message.replace("*", "").replace("`", "").replace("\\_", "_")
            await bot.send_message(chat_id, clean_message)
    
    # –ï—Å–ª–∏ –Ω–∞–±—Ä–∞–ª–æ—Å—å 2 –∏–≥—Ä–æ–∫–∞, –Ω–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É
    if can_start:
        game.start_game()
        
        # –£–¥–∞–ª—è–µ–º —Ç–∞–π–º–µ—Ä –æ–∂–∏–¥–∞–Ω–∏—è
        if chat_id in join_timers:
            del join_timers[chat_id]
        
        # –û–±—ä—è–≤–ª—è–µ–º –æ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã
        players_str = ", ".join([f"`{player.username}`" for player in game.players.values()])
        start_message = f"üé≤ *–ò–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!*\nüë• –£—á–∞—Å—Ç–Ω–∏–∫–∏: {players_str}"
        start_message += f"\n\n‚ùóÔ∏è –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—á–∞–ª–∏ –ª–∏—á–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º: https://t.me/{bot_username}"
        
        try:
            await bot.send_message(chat_id, start_message, parse_mode="Markdown")
        except TelegramBadRequest as e:
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å Markdown, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            clean_message = start_message.replace("*", "").replace("`", "").replace("\\_", "_")
            await bot.send_message(chat_id, clean_message)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ä—Ç–∞—Ö –∫–∞–∂–¥–æ–º—É –∏–≥—Ä–æ–∫—É –≤ –ª–∏—á–∫—É
        await send_cards_info_to_players(game)
        
        # –°–æ–æ–±—â–∞–µ–º –æ —Ö–æ–¥–µ –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        current_player = game.players.get(game.current_player_id)
        if current_player:
            try:
                await bot.send_message(
                    chat_id, 
                    f"üéØ –•–æ–¥ –∏–≥—Ä–æ–∫–∞ `{current_player.username}`. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞!",
                    parse_mode="Markdown"
                )
            except TelegramBadRequest as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                await bot.send_message(
                    chat_id, 
                    f"üéØ –•–æ–¥ –∏–≥—Ä–æ–∫–∞ {current_player.username}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞!"
                )

async def send_cards_info_to_players(game: Game):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ä—Ç–∞—Ö –∏–≥—Ä–æ–∫–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    for user_id, player in game.players.items():
        try:
            message = (
                f"üé¥ *–í–∞—à–∏ –∫–∞—Ä—Ç—ã:* {player.get_cards_str()}\n"
                f"üî¢ *–°—É–º–º–∞ –æ—á–∫–æ–≤:* {player.get_score()}"
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏, –µ—Å–ª–∏ —Å–µ–π—á–∞—Å —Ö–æ–¥ —ç—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            keyboard = None
            if game.current_player_id == user_id:
                message += "\n\nüéØ *–°–µ–π—á–∞—Å –≤–∞—à —Ö–æ–¥*. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
                keyboard = get_game_actions_keyboard()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ ID
            sent_message = await bot.send_message(
                user_id, 
                message,
                parse_mode="Markdown",
                reply_markup=keyboard
            )
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è
            if keyboard:
                last_keyboard_messages[user_id] = sent_message.message_id
                
        except Exception as e:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏, –≤–∫–ª—é—á–∞—è TelegramForbiddenError
            error_message = (
                f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É *{player.username}*. "
                f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∏–≥—Ä—ã: "
                f"https://t.me/{(await bot.get_me()).username}"
            )
            await bot.send_message(game.chat_id, error_message, parse_mode="Markdown")
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–≥—Ä–æ–∫—É {user_id}: {e}")

@dp.callback_query(F.data == "hit")
async def process_hit_callback(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–í–∑—è—Ç—å –µ—â—ë'"""
    user_id = callback.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏–º —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    if user_id in last_keyboard_messages and callback.message.message_id != last_keyboard_messages[user_id]:
        await callback.answer("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è!", show_alert=True)
        return
    
    # –ò—â–µ–º –∏–≥—Ä—É, –≤ –∫–æ—Ç–æ—Ä–æ–π —É—á–∞—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    game = find_game_by_user_id(user_id)
    if not game:
        await callback.answer("‚ö†Ô∏è –ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.", show_alert=True)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –∏–≥—Ä–æ–∫ –≤–∑—è—Ç—å –∫–∞—Ä—Ç—É
    success, card = game.hit(user_id)
    if not success:
        await callback.answer("‚ö†Ô∏è –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å –∫–∞—Ä—Ç—É —Å–µ–π—á–∞—Å.", show_alert=True)
        return
    
    player = game.players[user_id]
    
    await callback.answer(f"üÉè –í—ã –≤–∑—è–ª–∏ –∫–∞—Ä—Ç—É {card}!", show_alert=False)
    
    # –°–æ–æ–±—â–∞–µ–º –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç –æ –≤–∑—è—Ç–∏–∏ –∫–∞—Ä—Ç—ã
    try:
        await bot.send_message(
            game.chat_id,
            f"üÉè –ò–≥—Ä–æ–∫ `{player.username}` –±–µ—Ä–µ—Ç –µ—â–µ –∫–∞—Ä—Ç—É.",
            parse_mode="Markdown"
        )
    except TelegramBadRequest as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await bot.send_message(
            game.chat_id,
            f"üÉè –ò–≥—Ä–æ–∫ {player.username} –±–µ—Ä–µ—Ç –µ—â–µ –∫–∞—Ä—Ç—É."
        )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if not await can_message_user(user_id):
        bot_username = (await bot.get_me()).username
        try:
            await bot.send_message(
                game.chat_id,
                f"‚ùóÔ∏è `{player.username}`, –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. "
                f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º: https://t.me/{bot_username}",
                parse_mode="Markdown"
            )
        except TelegramBadRequest as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await bot.send_message(
                game.chat_id,
                f"‚ùóÔ∏è {player.username}, –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. "
                f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º: https://t.me/{bot_username}"
            )
    else:
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ä—Ç–∞—Ö
        message = (
            f"üé¥ *–í–∞—à–∏ –∫–∞—Ä—Ç—ã:* {player.get_cards_str()}\n"
            f"üî¢ *–°—É–º–º–∞ –æ—á–∫–æ–≤:* {player.get_score()}"
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø–µ—Ä–µ–±–æ—Ä
        if player.busted:
            try:
                await bot.send_message(
                    game.chat_id,
                    f"üí• –ò–≥—Ä–æ–∫ `{player.username}` –ø–µ—Ä–µ–±—Ä–∞–ª! –°—É–º–º–∞ –æ—á–∫–æ–≤: *{player.get_score()}*",
                    parse_mode="Markdown"
                )
            except TelegramBadRequest as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                await bot.send_message(
                    game.chat_id,
                    f"üí• –ò–≥—Ä–æ–∫ {player.username} –ø–µ—Ä–µ–±—Ä–∞–ª! –°—É–º–º–∞ –æ—á–∫–æ–≤: {player.get_score()}"
                )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫—É –≤ –õ–° –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–±–æ—Ä–µ –∏ —É–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            try:
                # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                if user_id in last_keyboard_messages:
                    try:
                        await bot.edit_message_reply_markup(
                            chat_id=user_id,
                            message_id=last_keyboard_messages[user_id],
                            reply_markup=None
                        )
                    except Exception:
                        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–µ—Ä–µ–±–æ—Ä–µ
                bust_message = (
                    f"üí• *–ü–µ—Ä–µ–±–æ—Ä!*\n"
                    f"üé¥ *–í–∞—à–∏ –∫–∞—Ä—Ç—ã:* {player.get_cards_str()}\n"
                    f"üî¢ *–°—É–º–º–∞ –æ—á–∫–æ–≤:* {player.get_score()}\n\n"
                    f"–í—ã –≤–∑—è–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–∞—Ä—Ç –∏ –ø—Ä–æ–∏–≥—Ä–∞–ª–∏."
                )
                try:
                    await bot.send_message(user_id, bust_message, parse_mode="Markdown")
                except TelegramBadRequest as e:
                    logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                    clean_message = bust_message.replace("*", "").replace("`", "").replace("\\_", "_")
                    await bot.send_message(user_id, clean_message)
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–µ—Ä–µ–±–æ—Ä–µ –∏–≥—Ä–æ–∫—É {user_id}: {e}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –ª–∏ –∏–≥—Ä–∞
            if game.finished:
                try:
                    await bot.send_message(
                        game.chat_id,
                        game.get_status_message(),
                        parse_mode="Markdown"
                    )
                except TelegramBadRequest as e:
                    logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                    clean_message = game.get_status_message().replace("*", "").replace("`", "").replace("\\_", "_")
                    await bot.send_message(game.chat_id, clean_message)
                return
            
            # –ü–µ—Ä–µ—Ö–æ–¥ —Ö–æ–¥–∞
            game.next_turn()
            current_player = game.players.get(game.current_player_id)
            if current_player:
                try:
                    await bot.send_message(
                        game.chat_id,
                        f"üéØ –•–æ–¥ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –∏–≥—Ä–æ–∫—É `{current_player.username}`.",
                        parse_mode="Markdown"
                    )
                except TelegramBadRequest as e:
                    logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                    await bot.send_message(
                        game.chat_id,
                        f"üéØ –•–æ–¥ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –∏–≥—Ä–æ–∫—É {current_player.username}."
                    )
                await update_player_message(game, current_player.user_id)
            return
        
        # –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–µ –ø–µ—Ä–µ–±—Ä–∞–ª, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è
        keyboard = get_game_actions_keyboard()
        message += "\n\nüéØ *–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:*"
        
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await callback.message.edit_text(message, reply_markup=keyboard, parse_mode="Markdown")
        except Exception:
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
            try:
                # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
                if user_id in last_keyboard_messages:
                    try:
                        await bot.edit_message_reply_markup(
                            chat_id=user_id,
                            message_id=last_keyboard_messages[user_id],
                            reply_markup=None
                        )
                    except Exception:
                        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ ID
                sent_message = await bot.send_message(
                    user_id, 
                    message, 
                    reply_markup=keyboard, 
                    parse_mode="Markdown"
                )
                last_keyboard_messages[user_id] = sent_message.message_id
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–≥—Ä–æ–∫—É {user_id}: {e}")
                bot_username = (await bot.get_me()).username
                try:
                    await bot.send_message(
                        game.chat_id,
                        f"‚ùóÔ∏è `{player.username}`, –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. "
                        f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º: https://t.me/{bot_username}",
                        parse_mode="Markdown"
                    )
                except TelegramBadRequest as e:
                    logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                    await bot.send_message(
                        game.chat_id,
                        f"‚ùóÔ∏è {player.username}, –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. "
                        f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º: https://t.me/{bot_username}"
                    )

@dp.callback_query(F.data == "stand")
async def process_stand_callback(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è'"""
    user_id = callback.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏–º —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    if user_id in last_keyboard_messages and callback.message.message_id != last_keyboard_messages[user_id]:
        await callback.answer("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è!", show_alert=True)
        return
    
    # –ò—â–µ–º –∏–≥—Ä—É, –≤ –∫–æ—Ç–æ—Ä–æ–π —É—á–∞—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    game = find_game_by_user_id(user_id)
    if not game:
        await callback.answer("‚ö†Ô∏è –ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.", show_alert=True)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –∏–≥—Ä–æ–∫ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è
    success = game.stand(user_id)
    if not success:
        await callback.answer("‚ö†Ô∏è –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è —Å–µ–π—á–∞—Å.", show_alert=True)
        return
    
    player = game.players[user_id]
    
    await callback.answer("‚úã –í—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å!", show_alert=False)
    
    # –°–æ–æ–±—â–∞–µ–º –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç –æ–± –æ—Å—Ç–∞–Ω–æ–≤–∫–µ
    try:
        await bot.send_message(
            game.chat_id,
            f"‚úã –ò–≥—Ä–æ–∫ `{player.username}` –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è. –°—É–º–º–∞ –æ—á–∫–æ–≤: *{player.get_score()}*",
            parse_mode="Markdown"
        )
    except TelegramBadRequest as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await bot.send_message(
            game.chat_id,
            f"‚úã –ò–≥—Ä–æ–∫ {player.username} –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è. –°—É–º–º–∞ –æ—á–∫–æ–≤: {player.get_score()}"
        )
    
    # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    try:
        await callback.message.edit_reply_markup(reply_markup=None)
    except Exception:
        pass
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ª–∏ –∏–≥—Ä–∞
    if game.finished:
        try:
            await bot.send_message(
                game.chat_id,
                game.get_status_message(),
                parse_mode="Markdown"
            )
        except TelegramBadRequest as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            clean_message = game.get_status_message().replace("*", "").replace("`", "").replace("\\_", "_")
            await bot.send_message(game.chat_id, clean_message)
        return
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∏–≥—Ä–æ–∫—É
    game.next_turn()
    current_player = game.players.get(game.current_player_id)
    if current_player:
        try:
            await bot.send_message(
                game.chat_id,
                f"üéØ –•–æ–¥ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –∏–≥—Ä–æ–∫—É `{current_player.username}`.",
                parse_mode="Markdown"
            )
        except TelegramBadRequest as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await bot.send_message(
                game.chat_id,
                f"üéØ –•–æ–¥ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –∏–≥—Ä–æ–∫—É {current_player.username}."
            )
        await update_player_message(game, current_player.user_id)

async def can_message_user(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    try:
        await bot.send_chat_action(user_id, "typing")
        return True
    except Exception:
        return False

async def update_player_message(game: Game, user_id: int):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–∞—Ä—Ç–∞—Ö –∏–≥—Ä–æ–∫–∞"""
    player = game.players.get(user_id)
    if not player:
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if not await can_message_user(user_id):
        bot_username = (await bot.get_me()).username
        try:
            await bot.send_message(
                game.chat_id,
                f"‚ùóÔ∏è `{player.username}`, –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. "
                f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º: https://t.me/{bot_username} "
                f"–∏ –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–Ω–æ–ø–∫—É –¥–µ–π—Å—Ç–≤–∏—è.",
                parse_mode="Markdown"
            )
        except TelegramBadRequest as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await bot.send_message(
                game.chat_id,
                f"‚ùóÔ∏è {player.username}, –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. "
                f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º: https://t.me/{bot_username} "
                f"–∏ –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–Ω–æ–ø–∫—É –¥–µ–π—Å—Ç–≤–∏—è."
            )
        return

    message = (
        f"üé¥ *–í–∞—à–∏ –∫–∞—Ä—Ç—ã:* {player.get_cards_str()}\n"
        f"üî¢ *–°—É–º–º–∞ –æ—á–∫–æ–≤:* {player.get_score()}"
    )
    
    # –ï—Å–ª–∏ —Å–µ–π—á–∞—Å —Ö–æ–¥ —ç—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –∏ –æ–Ω –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª –∏–≥—Ä—É
    if game.current_player_id == user_id and not player.stopped and not player.busted:
        message += "\n\nüéØ *–°–µ–π—á–∞—Å –≤–∞—à —Ö–æ–¥*. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        keyboard = get_game_actions_keyboard()
        
        try:
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
            if user_id in last_keyboard_messages:
                try:
                    await bot.edit_message_reply_markup(
                        chat_id=user_id,
                        message_id=last_keyboard_messages[user_id],
                        reply_markup=None
                    )
                except Exception:
                    pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ ID
            try:
                sent_message = await bot.send_message(
                    user_id, 
                    message, 
                    reply_markup=keyboard, 
                    parse_mode="Markdown"
                )
                last_keyboard_messages[user_id] = sent_message.message_id
            except TelegramBadRequest as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                clean_message = message.replace("*", "").replace("`", "").replace("\\_", "_")
                sent_message = await bot.send_message(
                    user_id, 
                    clean_message, 
                    reply_markup=keyboard
                )
                last_keyboard_messages[user_id] = sent_message.message_id
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–≥—Ä–æ–∫—É {user_id}: {e}")
            bot_username = (await bot.get_me()).username
            try:
                await bot.send_message(
                    game.chat_id,
                    f"‚ùóÔ∏è `{player.username}`, –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. "
                    f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º: https://t.me/{bot_username}",
                    parse_mode="Markdown"
                )
            except TelegramBadRequest as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                await bot.send_message(
                    game.chat_id,
                    f"‚ùóÔ∏è {player.username}, –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. "
                    f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º: https://t.me/{bot_username}"
                )

def find_game_by_user_id(user_id: int) -> Optional[Game]:
    """–ù–∞—Ö–æ–¥–∏—Ç –∏–≥—Ä—É, –≤ –∫–æ—Ç–æ—Ä–æ–π —É—á–∞—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"""
    for game in active_games.values():
        if user_id in game.players and not game.finished:
            return game
    return None

@dp.message()
async def unhandled_message_handler(message: types.Message):
    logging.warning(f"–ü–æ–ª—É—á–µ–Ω–æ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.text} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –≤ —á–∞—Ç–µ {message.chat.id}")
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏, –Ω–æ –ø–æ–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–∏–º—Å—è –ª–æ–≥–æ–º
    # await message.answer("–ü–æ–ª—É—á–∏–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –Ω–µ –Ω–∞—à–µ–ª –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã.")

async def on_startup(bot: Bot) -> None:
    """–î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫
    await bot.set_webhook(url=WEBHOOK_URL)
    logging.info(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {WEBHOOK_URL}")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –º–µ–Ω—é
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    private_commands = [
        types.BotCommand(command="start", description="–ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º"),
        types.BotCommand(command="help", description="–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")
    ]
    
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤
    group_commands = [
        types.BotCommand(command="start_21", description="–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É –≤ 21"),
        types.BotCommand(command="game_status", description="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã"),
        types.BotCommand(command="help", description="–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")
    ]
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —á–∞—Ç–æ–≤
    await bot.set_my_commands(private_commands, scope=types.BotCommandScopeDefault())
    await bot.set_my_commands(group_commands, scope=types.BotCommandScopeAllGroupChats())
    
    logging.info("–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —á–∞—Ç–æ–≤")

async def on_shutdown(bot: Bot) -> None:
    """–î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ –±–æ—Ç–∞"""
    # –£–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫
    await bot.delete_webhook()
    logging.info("Webhook —É–¥–∞–ª–µ–Ω")
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é aiohttp-—Å–µ—Å—Å–∏—é –±–æ—Ç–∞
    await bot.session.close()
    logging.info("Aiohttp session –∑–∞–∫—Ä—ã—Ç–∞")
    # –ü–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ context7: –∂–¥—ë–º 250 –º—Å –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
    await asyncio.sleep(0.250)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ —Å polling (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
async def start_polling():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º polling (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –º–µ–Ω—é
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    private_commands = [
        types.BotCommand(command="start", description="–ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º"),
        types.BotCommand(command="help", description="–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")
    ]
    
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤
    group_commands = [
        types.BotCommand(command="start_21", description="–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É –≤ 21"),
        types.BotCommand(command="game_status", description="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã"),
        types.BotCommand(command="help", description="–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")
    ]
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —á–∞—Ç–æ–≤
    await bot.set_my_commands(private_commands, scope=types.BotCommandScopeDefault())
    await bot.set_my_commands(group_commands, scope=types.BotCommandScopeAllGroupChats())
    
    logging.info("–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —á–∞—Ç–æ–≤")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    await dp.start_polling(bot)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å webhook (–¥–ª—è –¥–µ–ø–ª–æ—è)
def start_webhook():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º webhook (–¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Render)"""
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = web.Application()
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    dp.startup.register(on_startup)
    dp.shutdown.register(on_shutdown)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞
    webhook_requests_handler = SimpleRequestHandler(
        dispatcher=dp,
        bot=bot,
    )
    webhook_requests_handler.register(app, path=WEBHOOK_PATH)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞ –¥–ª—è healthcheck
    async def health_check(request):
        return web.Response(text=f"–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç. Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {WEBHOOK_URL}")
    
    app.router.add_get("/", health_check)
    
    # –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    logging.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è BOT_TOKEN (–º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–æ): ...{BOT_TOKEN[-5:]}")
    logging.info(f"Webhook URL: {WEBHOOK_URL}")
    logging.info(f"Webhook PATH: {WEBHOOK_PATH}")
    logging.info(f"–ü–æ–ª–Ω—ã–π –ø—É—Ç—å Webhook: {WEBHOOK_URL}")
    logging.info(f"–í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ {WEB_SERVER_HOST}:{WEB_SERVER_PORT}")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
    setup_application(app, dp, bot=bot)
    
    # –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
    web.run_app(app, host=WEB_SERVER_HOST, port=WEB_SERVER_PORT)

if __name__ == "__main__":
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∑–∞–ø—É—Å–∫–∞–µ–º—Å—è –≤ —Ä–µ–∂–∏–º–µ polling –∏–ª–∏ webhook
    # –í –ª–æ–∫–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º polling, –Ω–∞ Render - webhook
    if os.environ.get('IS_RENDER') or '--webhook' in sys.argv:
        logging.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ webhook (–¥–ª—è –¥–µ–ø–ª–æ—è)")
        start_webhook()
    else:
        logging.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)")
        asyncio.run(start_polling()) 